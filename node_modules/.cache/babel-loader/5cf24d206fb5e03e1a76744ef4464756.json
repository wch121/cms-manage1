{"ast":null,"code":"var _jsxFileName = \"D:\\\\vs code\\\\project\\\\aka\\\\cms\\\\cms-manage\\\\cms-manage1\\\\src\\\\pages\\\\List.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Table, Button, message, Pagination } from 'antd';\nimport { GetArticleListApi, DeleteArticleApi } from \"request/api\";\nimport { useNavigate } from 'react-router-dom';\nimport moment from 'moment';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst columns = [{\n  title: '文章标题',\n  dataIndex: 'title',\n  width: '60%'\n}, {\n  title: '发布时间',\n  dataIndex: 'time',\n  width: '20%'\n}, {\n  title: '操作',\n  dataIndex: 'action'\n}];\n//标题与副标题\nconst TitleComp = props => /*#__PURE__*/_jsxDEV(_Fragment, {\n  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"a\", {\n      href: \"!#\",\n      children: props.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 14\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n    style: {\n      color: '#999'\n    },\n    children: props.subTitle || \"\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this)]\n}, void 0, true);\n//操作按钮的组件\n_c = TitleComp;\nconst ActionBtn = props => {\n  _s();\n  const navigate = useNavigate();\n\n  //点击了编辑按钮\n  const goToEdit = () => {\n    let id = props.id;\n    //携带id跳转到edit页面\n    navigate('/edit/' + id);\n  };\n  //点击了删除按钮\n  const deleteFn = () => {\n    DeleteArticleApi({\n      id: props.id\n    }).then(res => {\n      console.log(res);\n      if (res.errCode === 0) {\n        message.success(res.message);\n        //重新刷新列表\n        props.getListFn(props.current, 10);\n        //方法2，直接刷新整个页面\n        //window.location.reload();\n        //方法3设置一个字段，删除成功之后更改这个字段，让getListFn()被再次触发，然后不用传输过来子组件\n      } else {\n        message.error(res.message);\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      type: \"primary\",\n      style: {\n        marginRight: '20px'\n      },\n      onClick: goToEdit,\n      children: \"\\u7F16\\u8F91\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      type: \"primary\",\n      danger: true,\n      onClick: deleteFn,\n      children: \"\\u5220\\u9664\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s(ActionBtn, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n_c2 = ActionBtn;\nexport default function List() {\n  _s2();\n  //列表数组(泛型)\n  const [data, seyData] = useState([]);\n  //分页组件的数据总条数\n  const [total, setTotal] = useState(0);\n  //当前页\n  const [current, setCurrent] = useState(1);\n\n  //封装了一个请求方法\n  const getListFn = (page, pageSize) => {\n    GetArticleListApi({\n      current: page,\n      counts: pageSize\n    }).then(res => {\n      console.log(res);\n      if (res.errCode === 0) {\n        message.success(res.message);\n      }\n      let newarr = [];\n      //设置了总数据\n      setTotal(res.data.total);\n      //设置当前页，每页个数\n      setCurrent(res.data.current);\n      res.data.arr.map(item => {\n        let obj = {\n          key: item.id,\n          title: /*#__PURE__*/_jsxDEV(TitleComp, {\n            title: item.title,\n            subTitle: item.subTitle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 28\n          }, this),\n          time: moment(item.date).format(\"YYYY-MM-DD hh:mm:ss\"),\n          action: /*#__PURE__*/_jsxDEV(ActionBtn, {\n            current: current,\n            getListFn: getListFn,\n            id: item.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 29\n          }, this)\n        };\n        newarr.push(obj);\n      });\n      seyData(newarr);\n    });\n  };\n  useEffect(() => {\n    getListFn(1, 10);\n  }, []);\n  const onPageChange = (page, pageSize) => {\n    console.log(page, pageSize);\n    //发起请求\n    getListFn(page, pageSize);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Table, {\n      showHeader: false,\n      columns: columns,\n      dataSource: data,\n      pagination: false\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n      onChange: onPageChange,\n      defaultCurrent: 1,\n      total: total\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s2(List, \"u5CyhIup26RVnCXgUsn0oGouEIE=\");\n_c3 = List;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"TitleComp\");\n$RefreshReg$(_c2, \"ActionBtn\");\n$RefreshReg$(_c3, \"List\");","map":{"version":3,"names":["React","useEffect","useState","Table","Button","message","Pagination","GetArticleListApi","DeleteArticleApi","useNavigate","moment","columns","title","dataIndex","width","TitleComp","props","color","subTitle","ActionBtn","navigate","goToEdit","id","deleteFn","then","res","console","log","errCode","success","getListFn","current","error","marginRight","List","data","seyData","total","setTotal","setCurrent","page","pageSize","counts","newarr","arr","map","item","obj","key","time","date","format","action","push","onPageChange"],"sources":["D:/vs code/project/aka/cms/cms-manage/cms-manage1/src/pages/List.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { Table, Button, message, Pagination } from 'antd';\r\nimport { GetArticleListApi, DeleteArticleApi } from \"request/api\"\r\nimport { useNavigate } from 'react-router-dom';\r\nimport moment from 'moment'\r\n\r\nconst columns = [\r\n    {\r\n        title: '文章标题',\r\n        dataIndex: 'title',\r\n        width: '60%',\r\n    },\r\n    {\r\n        title: '发布时间',\r\n        dataIndex: 'time',\r\n        width: '20%',\r\n    },\r\n    {\r\n        title: '操作',\r\n        dataIndex: 'action',\r\n    },\r\n];\r\n\r\ninterface IData {\r\n    key: React.Key;\r\n    title: React.ReactNode;\r\n    time: string;\r\n    action: React.ReactNode;\r\n}\r\n\r\n//标题与副标题\r\nconst TitleComp = (props: { title: string; subTitle?: string; }) => (\r\n    <>\r\n        <div><a href=\"!#\">{props.title}</a></div>\r\n        <p style={{ color: '#999' }}>{props.subTitle || \"\"}</p>\r\n    </>\r\n)\r\n//操作按钮的组件\r\nconst ActionBtn = (props: { current: number; id: number; getListFn: (page: number, pageSize: number) => void }) => {\r\n    const navigate = useNavigate();\r\n\r\n    //点击了编辑按钮\r\n    const goToEdit = () => {\r\n        let id = props.id\r\n        //携带id跳转到edit页面\r\n        navigate('/edit/'+id)\r\n    }\r\n    //点击了删除按钮\r\n    const deleteFn = () => {\r\n        DeleteArticleApi({ id: props.id }).then((res: any) => {\r\n            console.log(res)\r\n            if (res.errCode === 0) {\r\n                message.success(res.message);\r\n                //重新刷新列表\r\n                props.getListFn(props.current, 10)\r\n                //方法2，直接刷新整个页面\r\n                //window.location.reload();\r\n                //方法3设置一个字段，删除成功之后更改这个字段，让getListFn()被再次触发，然后不用传输过来子组件\r\n            } else {\r\n                message.error(res.message);\r\n            }\r\n        })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Button type='primary' style={{ marginRight: '20px' }} onClick={goToEdit}>编辑</Button>\r\n            <Button type='primary' danger onClick={deleteFn}>删除</Button>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default function List() {\r\n    //列表数组(泛型)\r\n    const [data, seyData] = useState<IData[]>([])\r\n    //分页组件的数据总条数\r\n    const [total, setTotal] = useState(0);\r\n    //当前页\r\n    const [current, setCurrent] = useState(1);\r\n\r\n    //封装了一个请求方法\r\n    const getListFn = (page: number, pageSize: number) => {\r\n        GetArticleListApi({\r\n            current: page,\r\n            counts: pageSize,\r\n        }).then((res: any) => {\r\n            console.log(res)\r\n            if (res.errCode === 0) {\r\n                message.success(res.message)\r\n            }\r\n            let newarr: IData[] = [];\r\n            interface IItem {\r\n                title: string;\r\n                subTitle: string;\r\n                date: string;\r\n                id: number;\r\n            }\r\n\r\n            //设置了总数据\r\n            setTotal(res.data.total);\r\n            //设置当前页，每页个数\r\n            setCurrent(res.data.current);\r\n            res.data.arr.map((item: IItem) => {\r\n                let obj = {\r\n                    key: item.id,\r\n                    title: <TitleComp title={item.title} subTitle={item.subTitle} />,\r\n                    time: moment(item.date).format(\"YYYY-MM-DD hh:mm:ss\"),\r\n                    action: <ActionBtn current={current} getListFn={getListFn} id={item.id} />\r\n                }\r\n                newarr.push(obj)\r\n            })\r\n            seyData(newarr)\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        getListFn(1, 10);\r\n    }, []);\r\n\r\n    const onPageChange = (page: number, pageSize: number) => {\r\n        console.log(page, pageSize);\r\n        //发起请求\r\n        getListFn(page, pageSize);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Table\r\n                showHeader={false}\r\n                columns={columns}\r\n                dataSource={data}\r\n                pagination={false}\r\n            />\r\n            <Pagination\r\n                onChange={onPageChange}\r\n                defaultCurrent={1}\r\n                total={total}\r\n            />\r\n        </>\r\n    )\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}